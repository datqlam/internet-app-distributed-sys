from django.http import HttpResponse, HttpResponseNotFound, Http404
from django.shortcuts import get_object_or_404

from .models import Topic, Course, Student, Order

# Create your views here.
def index(request):
    top_list = Topic.objects.all().order_by('id')[:10]
    course_list = Course.objects.all().order_by('-price')[:5]
    response = HttpResponse()
    heading1 = '<p>''<u>' + 'LIST OF TOPICS: ' + '</u>''</p>'
    response.write(heading1)
    for topic in top_list:
        para = '<p>'+ str(topic.id) + ': ' + str(topic) + '</p>'
        response.write(para)
    heading2 = '<p>''<u>' + 'LIST OF TOP 5 EXPENSIVE COURSES: ' + '</u>''</p>'
    response.write(heading2)
    for course in course_list:
        if course.for_everyone == True:
            para = '<p>'+ str(course) + ':' + 'This course is for everyone' + '</p>'
            response.write(para)
        else:
            para = '<p>' + str(course) + ':' + 'This course is not for everyone' + '</p>'
            response.write(para)
    return response

def about(request):
    response = HttpResponse()
    para = '<p>''<center>''<h3>' + "This is an E-learning Website! Search our Topics to find all available Courses." + '</h3>''</center>''</p>'
    response.write(para)
    return response

def detail(request, top_no):
    response = HttpResponse()
    heading1 = '<p>' '<u>' + 'CATEGORY' +  '</u>' '</p>'
    response.write(heading1)
    try:
        err_msg = Topic.objects.get(id=top_no)
    except Topic.DoesNotExist:
        #return get_object_or_404()
        return HttpResponseNotFound("Page not found (404) error.")
        #raise Http404("Page not found (404)")
    #topic_name = Topic.objects.get(id=top_no).name
    #category_name = Topic.objects.get(id = top_no).category
    para = '<p>' + str(err_msg.category) + '</p>'
    response.write(para)
    course_list = Course.objects.all().filter(topic = top_no)
    response.write('<p>' '<u>' + 'COURSES:' + '</u>' '</p>')
    for course in course_list:
        response.write('<p>' + str(course) + '</p>')
    #top_no = get_object_or_404(Topic, id!=top_no)
    return response
